-  A great, organized set of resources that explains the basics of python and how to use the `arcade` library to make games:
   https://learn.arcade.academy/
   RealPython also has their own Arcade tutorial which some may prefer. ( https://realpython.com/arcade-python-game-framework/ )


-  Dictionaries: A very useful data structure.
   Basics: https://realpython.com/python-dicts/
   
   
-  Reading CSV Files: Very practical, because Excel sheets can be saved as CSV for use with python.
   Recommended prerequisite: Dictionaries
   Basics: https://realpython.com/python-csv/
   More advanced: https://realpython.com/python-interview-problem-parsing-csv-files/
   
   
-  Text-based adventure games:
   https://adventurelib.readthedocs.io/en/stable/
   
   
-  Basics of turtle:
   Basics: https://realpython.com/beginners-guide-python-turtle/
   
   
-  Games made using turtle and the freegames module.
   These are simple enough to be able to make small changes and grasp how some parts of the code work.
   Recommended prerequisite: Basics of turtle
   https://grantjenks.com/docs/freegames/


-  Web scraping using BeautifulSoup:
   https://www.dataquest.io/blog/web-scraping-python-using-beautiful-soup/


-  Data processing using pandas: 
   https://pandas.pydata.org/


-  Web server using Flask:
   (This is a good, gentle introduction)
   https://projects.raspberrypi.org/en/projects/python-web-server-with-flask/


-  Web server usuing Flask (another):
   This one is good; requires either a Raspberry Pi or some modifications.
   https://towardsdatascience.com/python-webserver-with-flask-and-raspberry-pi-398423cc6f5d


-  Web server using Django:
   (This one is a bit steeper of a learning curve than the Flask one)
   https://djangoproject.com/
